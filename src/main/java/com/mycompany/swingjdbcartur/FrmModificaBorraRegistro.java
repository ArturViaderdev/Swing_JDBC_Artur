/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.swingjdbcartur;

import codigo.DAO;
import codigo.Memoria;
import datos.Record;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 * Pantalla para modificar o borrar un registro de actividad
 * @author Artur Viader
 */
public class FrmModificaBorraRegistro extends javax.swing.JDialog {
    DAO dao = DAO.getInstancia();
    Memoria memoria = Memoria.getInstancia();
    ArrayList<Record> registros;
    DefaultListModel<String> modelo;
    /**
     * Constructor
     */
    public FrmModificaBorraRegistro(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setSize(530,380);
        setTitle("Modificar o borrar registro");
        modelo = new DefaultListModel<>();
        bModificar.setEnabled(false);
        bEliminar.setEnabled(false);
        //Se llena la tabla
        refresca();
    }

    /**
     * Refresca o llena la tabla
     */
    private void refresca()
    {
        try {
            //Se vacía la tabla
            modelo.clear();
            //Se obtienen los registros de actividad del usuario que ha iniciado sesión
            registros = dao.selectRegistrosUsuario(memoria.getUsuario());
            for (Record registro:registros)
            {
                modelo.addElement(registro.getActivity() + " - " +  registro.getStringDate() + " " + registro.getStringTime());
            }
            lRecords.setModel(modelo);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "SQL Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lRecords = new javax.swing.JList<>();
        bModificar = new javax.swing.JButton();
        bEliminar = new javax.swing.JButton();
        bCerrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lRecords.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lRecordsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lRecords);

        bModificar.setText("Modificar");
        bModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bModificarActionPerformed(evt);
            }
        });

        bEliminar.setText("Eliminar");
        bEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminarActionPerformed(evt);
            }
        });

        bCerrar.setText("Cerrar");
        bCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(124, 124, 124)
                                .addComponent(bModificar)
                                .addGap(89, 89, 89)
                                .addComponent(bEliminar))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(bCerrar)))
                        .addGap(0, 114, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bModificar)
                    .addComponent(bEliminar))
                .addGap(18, 18, 18)
                .addComponent(bCerrar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Botón de eliminar
     * @param evt 
     */
    private void bEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminarActionPerformed
        //Si se ha seleccionado una actividad
        if(lRecords.getSelectedIndex()>=0)
        {
            //Se obtiene el registro seleccionado de la memoria
            Record registro = registros.get(lRecords.getSelectedIndex());
            //Se solicita confirmación
            int reply = JOptionPane.showConfirmDialog(this, "¿Estás seguro de que deseas borrar el registro de la actividad " + registro.getActivity()  + " en la fecha " + registro.getStringDate() + " " + registro.getStringTime() + "?", "Atención", JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION) {
                try {
                    //Se borra el registro
                    dao.deleteRegistro(registro);
                    JOptionPane.showMessageDialog(this, "Registro eliminado", "Ok", JOptionPane.INFORMATION_MESSAGE);
                    refresca();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "SQL Error", JOptionPane.ERROR_MESSAGE);
                }
            }  
        }
    }//GEN-LAST:event_bEliminarActionPerformed

    /**
     * Al cambiar la selección si no hay ningún registro seleccionado se deshabilitan los botones de modificar y eliminar o se activan si si se ha seleccionado
     * @param evt 
     */
    private void lRecordsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lRecordsValueChanged
        if(lRecords.getSelectedIndex()==-1)
        {
            bEliminar.setEnabled(false);
            bModificar.setEnabled(false);
        }
        else
        {
            bEliminar.setEnabled(true);
            bModificar.setEnabled(true);
        }
    }//GEN-LAST:event_lRecordsValueChanged

    /**
     * Botón de modificar
     * @param evt 
     */
    private void bModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bModificarActionPerformed
        if(lRecords.getSelectedIndex()>=0)
        {
            //Se abre la pantalla para modificación
            FrmRealizarRegistro frmrealizaregistro;
            frmrealizaregistro = new FrmRealizarRegistro(null,true,true,registros.get(lRecords.getSelectedIndex()));
            frmrealizaregistro.setLocationRelativeTo(null);
            frmrealizaregistro.setVisible(true);   
            //Una vez se ha modificado se refresca
            refresca();
        }
    }//GEN-LAST:event_bModificarActionPerformed

    /**
     * Botón de cerrar
     * @param evt 
     */
    private void bCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_bCerrarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCerrar;
    private javax.swing.JButton bEliminar;
    private javax.swing.JButton bModificar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> lRecords;
    // End of variables declaration//GEN-END:variables
}
